{"version":3,"sources":["components/Grid/index.js","components/Nav/index.js","components/Jumbotron/index.js","components/CartoonCard/index.js","pages/Game.js","App.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Nav","props","href","message","score","highscore","Jumbotron","style","height","clear","paddingTop","textAlign","CartoonCard","data-id","id","onClick","alt","name","src","image","Game","state","cartoons","clicked","clickedImage","event","console","log","target","dataset","_this","setState","Object","objectSpread","defineProperty","shuffleCartoons","checkWin","checkHighScore","i","length","random","Math","floor","hold","this","Cartoon","_this2","components_Nav","components_Jumbotron","item","key","components_CartoonCard","Component","App","pages_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b75f7c8b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col, Row, Container } from \"../Grid\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <nav className=\"navbar-dark\">\r\n    <Container>\r\n      <Row>\r\n        <Col size=\"4\">\r\n          <a className=\"\" href=\"/\">\r\n            Clicky Game\r\n          </a>\r\n        </Col>\r\n        <Col size=\"4\">\r\n          <p>\r\n            {props.message}\r\n          </p>\r\n        </Col>\r\n        <Col size=\"4\">\r\n          <p>\r\n            Score: {props.score}      High score: {props.highscore}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CartoonCard(props) {\r\n  return (\r\n      <div  data-id={props.id} onClick={props.onClick} className=\"img-container\">\r\n        <img data-id={props.id} alt={props.name} src={props.image}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CartoonCard;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"../components/Nav\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Cartoon from \"../cartoon.json\";\r\nimport CartoonCard from \"../components/CartoonCard\";\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        cartoons: [] ,\r\n        score: 0,\r\n        highscore: 0,\r\n        clicked: {},\r\n        message: \"\"\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.setState({cartoons: Cartoon})\r\n    }\r\n    \r\n    clickedImage = event => {\r\n        console.log(event.target.dataset.id)\r\n        this.setState({message: \"\"})\r\n        if(this.state.clicked[event.target.dataset.id]){\r\n            this.setState({clicked: {}});\r\n            this.setState({score: 0});\r\n            this.setState({message: \"you lose\"})\r\n        } else {\r\n            this.setState({score: this.state.score+1});\r\n            this.setState({clicked: {...this.state.clicked, [event.target.dataset.id]:1}});\r\n            this.shuffleCartoons(this.state.cartoons);\r\n            this.checkWin();\r\n            this.checkHighScore();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    shuffleCartoons = cartoons => {\r\n        for(var i=0; i < cartoons.length; i++){\r\n            var random = Math.floor(Math.random() * cartoons.length)\r\n            var hold = cartoons[i]\r\n            cartoons[i] = cartoons[random];\r\n            cartoons[random] = hold;\r\n        }\r\n        return cartoons\r\n    }\r\n\r\n    checkWin = () => {\r\n        if (this.state.score + 1 === 12){\r\n            this.setState({message: \"you win\"})\r\n        }\r\n    }\r\n    checkHighScore = ()=>{\r\n        if (this.state.score + 1 > this.state.highscore){\r\n            this.setState({highscore: this.state.score + 1})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Nav\r\n            message={this.state.message}\r\n            score={this.state.score}\r\n            highscore={this.state.highscore}\r\n            />\r\n            <Jumbotron>\r\n                <h1>Memory Game</h1>\r\n            </Jumbotron>\r\n            <Container>\r\n                <Row>\r\n                    {this.state.cartoons.map(item => (\r\n                        <Col size=\"md-3 sm-4\" key={item.id}>\r\n                            <CartoonCard \r\n                            onClick={this.clickedImage}\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            image={item.image}\r\n                            />\r\n                             \r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Game from \"./pages/Game\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Game/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}